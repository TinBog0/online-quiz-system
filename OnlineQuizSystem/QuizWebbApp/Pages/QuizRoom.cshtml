@page "/QuizRoom"
@model QuizWebbApp.Pages.QuizRoom
@{
    ViewData["Title"] = "Quiz Room";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" />

<nav class="navbar navbar-expand-lg navbar-light" style="background-color: #3b82f6;">
    <a class="navbar-brand text-white" href="/">Online Quiz System</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse"
            data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false"
            aria-label="Toggle navigation">
        <span class="navbar-toggler-icon" style="color:#fff;"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
            <li class="nav-item active"><a class="nav-link text-white" href="/">Home</a></li>
            <li class="nav-item"><a class="nav-link text-white" href="/About">About</a></li>
            <li class="nav-item"><a class="nav-link text-white" href="/Contact">Contact</a></li>
            <li class="nav-item"><a class="nav-link text-white" href="/Profile">Profile</a></li>
            <li class="nav-item"><a class="nav-link text-white" href="/Settings">Settings</a></li>
        </ul>
    </div>
</nav>

<div class="container-fluid" style="height: 90vh; position: relative;">
    <div class="row h-100">
        <div class="col-md-3 bg-light d-flex flex-column align-items-center pt-4">
            <h4 class="text-primary">Friends in Room</h4>
            <ul class="list-group w-75 mt-3">
                <li class="list-group-item">Alice</li>
                <li class="list-group-item">Bob</li>
                <li class="list-group-item">Charlie</li>
                <li class="list-group-item">Diana</li>
            </ul>
        </div>

        <div class="col-md-9 d-flex flex-column justify-content-center align-items-center">
            <div class="timer-wrapper">
                <div class="circle">
                    <div class="mask full">
                        <div class="fill"></div>
                    </div>
                    <div class="mask half">
                        <div class="fill"></div>
                    </div>
                    <div class="inside-circle">
                        <span id="timer-text">30</span>
                    </div>
                </div>
            </div>

            <div class="question-field text-center mb-4 w-75 p-3">
                <h2 class="text-primary">What is the capital of France?</h2>
            </div>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger text-center w-50">
                    @Model.ErrorMessage
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.SuccessMessage))
            {
                <div class="alert alert-success text-center w-50">
                    @Model.SuccessMessage
                </div>
            }

            <div class="answers-field w-75 text-center">
                <form method="post" class="d-flex flex-column align-items-center">
                    <input type="text"
                           name="UserAnswer"
                           class="form-control text-center mb-3"
                           placeholder="Enter your answer..."
                           style="max-width: 400px;"
                           required />
                    <button type="submit" class="btn btn-primary">
                        Submit Answer
                    </button>
                </form>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center mt-3">
        <a href="/results" class="btn btn-success">Go to Results Page</a>
    </div>
</div>

<style>
    .timer-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }

    .circle {
        position: relative;
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background: #f9f9f9;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .mask, .fill {
        width: 120px;
        height: 120px;
        position: absolute;
        border-radius: 50%;
        clip: rect(0px, 120px, 120px, 60px);
    }

    .mask.full, .circle .fill {
        animation: fillCircle 30s linear forwards;
        background: #34d399;
    }

    .mask.half {
        clip: rect(0px, 60px, 120px, 0px);
    }

    .inside-circle {
        position: absolute;
        top: 10%;
        left: 10%;
        width: 80%;
        height: 80%;
        background: #fff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: bold;
        color: #3b82f6;
    }

    @@keyframes fillCircle {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }
</style>

<script>
    let timeLeft = 30;
    const timerText = document.getElementById("timer-text");

    const intervalId = setInterval(() => {
        timeLeft--;
        timerText.innerText = timeLeft;

        if (timeLeft <= 0) {
            clearInterval(intervalId);
            alert("Time's up!");
        }
    }, 1000);
</script>
